version: '3.8'

services:
  # Configuration pour le développement - sans build de l'app
  # L'application Spring Boot sera lancée directement depuis l'IDE
  
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: titan-postgres-dev
    environment:
      - POSTGRES_DB=titan_db
      - POSTGRES_USER=titan_user
      - POSTGRES_PASSWORD=titan_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - titan-dev-network
    restart: unless-stopped

  # MinIO pour le stockage de fichiers
  minio:
    image: minio/minio:latest
    container_name: titan-minio-dev
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_dev_data:/data
    networks:
      - titan-dev-network
    restart: unless-stopped

  # Configuration des buckets MinIO
  minio-mc:
    image: minio/mc:latest
    container_name: titan-minio-mc-dev
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 admin password123;
      /usr/bin/mc mb minio/titan-songs --ignore-existing;
      /usr/bin/mc mb minio/titan-images --ignore-existing;
      /usr/bin/mc mb minio/titan-videos --ignore-existing;
      /usr/bin/mc mb minio/titan-photos --ignore-existing;
      /usr/bin/mc policy set public minio/titan-songs;
      /usr/bin/mc policy set public minio/titan-images;
      /usr/bin/mc policy set public minio/titan-videos;
      /usr/bin/mc policy set public minio/titan-photos;
      exit 0;
      "
    networks:
      - titan-dev-network

volumes:
  postgres_dev_data:
    driver: local
  minio_dev_data:
    driver: local

networks:
  titan-dev-network:
    driver: bridge
