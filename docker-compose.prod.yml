version: '3.8'

services:
  # Application Spring Boot principale
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-admin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-password123}
      - MINIO_BUCKET_SONGS=titan-songs-prod
      - MINIO_BUCKET_IMAGES=titan-images-prod
      - MINIO_BUCKET_VIDEOS=titan-videos-prod
      - MINIO_BUCKET_PHOTOS=titan-photos-prod
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_MS=86400000
      - MAIL_HOST=${MAIL_HOST:-smtp.gmail.com}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      - minio
    networks:
      - titan-network
    restart: unless-stopped

  # Service MinIO pour stockage de fichiers
  minio:
    build:
      context: .
      dockerfile: Dockerfile.minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-password123}
    volumes:
      - minio_data:/data
    networks:
      - titan-network
    restart: unless-stopped
    command: server /data --console-address ":9001"

  # Configuration automatique des buckets MinIO
  minio-setup:
    image: minio/mc:latest
    depends_on:
      - minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-password123}
    networks:
      - titan-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb minio/titan-songs-prod --ignore-existing;
      /usr/bin/mc mb minio/titan-images-prod --ignore-existing;
      /usr/bin/mc mb minio/titan-videos-prod --ignore-existing;
      /usr/bin/mc mb minio/titan-photos-prod --ignore-existing;
      /usr/bin/mc policy set public minio/titan-songs-prod;
      /usr/bin/mc policy set public minio/titan-images-prod;
      /usr/bin/mc policy set public minio/titan-videos-prod;
      /usr/bin/mc policy set public minio/titan-photos-prod;
      exit 0;
      "

volumes:
  minio_data:
    driver: local

networks:
  titan-network:
    driver: bridge
